@model TMNT.Models.ViewModels.StockReagentTopUpViewModel

@{
    ViewBag.Title = "Details";
}
@Scripts.Render("~/bundles/jqueryval")

@section AddToHead {
    @Styles.Render("~/maxxam-forms")
    <link href="~/Content/chosen.css" rel="stylesheet" />
    <link href="../../Content/dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/Datepicker/bootstrap-datepicker3.min.css" rel="stylesheet" />
    <style>
        .form-group {
            margin-left: 0 !important;
            margin-right: 0 !important;
        }

        .fix-dt-padding {
            padding-top: 6px;
        }

        .fix-dd-margin {
            margin-bottom: 4px;
        }

        ul.chosen-choices {
            border: 1px solid #ccc !important;
            background-image: none !important;
        }

        li.search-field {
            padding-top: 3px !important;
            height: 32px !important;
            padding-left: 5px !important;
            font-size: 14px !important;
        }

        li.search-choice {
            margin: 5px 5px 3px 0 !important;
        }

        div.chosen-container {
            width: 100% !important;
        }

        #button-row {
            margin-top: 100px;
        }

        .disabled {
            border:none !important;
        }
    </style>
}

<div class="row">
    <div class="col-lg-12">
        <h1>
            Top-up @Model.ReagentName
        </h1>
        <ol class="breadcrumb no-border-radius">
            <li class="active">
                <i class="fa fa-dashboard"></i>@Html.ActionLink(" Dashboard", "Index", "Home") / <i class="fa fa-flask"></i> Stock Reagents / <i class="fa fa-clipboard"></i> Top-up @Model.ReagentName
            </li>
        </ol>
    </div>
</div>

<p>
    @Html.ActionLink("Back to List", "Index", "Reagent", null, htmlAttributes: new { @class = "btn btn-default" })
</p>

<hr />

@Html.Partial("_SectionHeader", "Location Information")

<div class="container">
    <div class="col-md-6">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Department.Location.LocationName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Department.Location.LocationName)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Department.Location.Address)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Department.Location.Address), @Html.DisplayFor(model => model.Department.Location.PostalCode) <br />
                @Html.DisplayFor(model => model.Department.Location.City), @Html.DisplayFor(model => model.Department.Location.Province)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Department.Location.PhoneNumber)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Department.Location.PhoneNumber)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Department.Location.FaxNumber)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Department.Location.FaxNumber)
            </dd>
        </dl>
    </div>
    <div class="col-md-6">
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Department.DepartmentName)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Department.DepartmentName)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Department.SubDepartment)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Department.SubDepartment)
            </dd>
        </dl>
    </div>
</div>

@Html.Partial("_SectionHeader", "Reagent Information")

<div class="container">
    <div class="col-md-6">
        <dl class="dl-horizontal">
            <dt class="fix-dt-padding">
                @Html.DisplayNameFor(model => model.CatalogueCode)
            </dt>

            <dd class="fix-dd-margin">
                @Html.TextBoxFor(model => model.CatalogueCode, new { @readonly = "readonly", @class = "form-control" })
            </dd>

            <dt class="fix-dt-padding">
                @Html.DisplayNameFor(model => model.ReagentName)
            </dt>

            <dd class="fix-dd-margin">
                @Html.TextBoxFor(model => model.ReagentName, new { @readonly = "readonly", @class = "form-control" })
            </dd>

            <dt class="fix-dt-padding">
                @Html.DisplayNameFor(model => model.DateCreated)
            </dt>

            <dd class="fix-dd-margin">
                @Html.TextBoxFor(model => model.DateCreated, new { @readonly = "readonly", @class = "form-control" })
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CertificateOfAnalysis)
            </dt>

            <dd>
                @Html.ActionLink("View Cerificate of Analysis", "ViewPDF", "PDFViewer", new { id = Model.CertificateOfAnalysis.CertificateOfAnalysisId, type = "CofA" }, htmlAttributes: new { @target = "_blank" })
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MSDS)
            </dt>

            <dd>
                @Html.ActionLink("View SDS", "ViewPDF", "PDFViewer", new { id = Model.MSDS.MSDSId, type = "MSDS" }, htmlAttributes: new { @target = "_blank" })
            </dd>

            <dt class="fix-dt-padding">
                @Html.DisplayNameFor(model => model.MSDSNotes)
            </dt>

            <dd class="fix-dd-margin">
                @Html.TextBoxFor(model => model.MSDSNotes, new { @readonly = "readonly", @class = "form-control" })
            </dd>
        </dl>

    </div>
    <div class="col-md-6">
        <dl class="dl-horizontal">
            <dt class="fix-dt-padding">
                @Html.DisplayNameFor(model => model.DateReceived)
            </dt>

            <dd class="fix-dd-margin">
                @Html.TextBoxFor(model => model.DateReceived, new { @readonly = "readonly", @class = "form-control" })
            </dd>

            <dt class="fix-dt-padding">
                @Html.DisplayNameFor(model => model.NumberOfBottles)
            </dt>

            <dd class="fix-dd-margin">
                @Html.TextBoxFor(model => model.NumberOfBottles, new { @readonly = "readonly", @class = "form-control" })
            </dd>

            <dt class="fix-dt-padding">
                @Html.DisplayNameFor(model => model.SupplierName)
            </dt>

            <dd class="fix-dd-margin">
                @Html.TextBoxFor(model => model.SupplierName, new { @readonly = "readonly", @class = "form-control" })
            </dd>

            <dt class="fix-dt-padding">
                @Html.DisplayNameFor(model => model.DateModified)
            </dt>

            <dd class="fix-dd-margin">
                @Html.TextBoxFor(model => model.DateModified, new { @readonly = "readonly", @class = "form-control" })
            </dd>

            <dt class="fix-dt-padding">
                @Html.DisplayNameFor(model => model.LastModifiedBy)
            </dt>

            <dd class="fix-dd-margin">
                @Html.TextBoxFor(model => model.LastModifiedBy, new { @readonly = "readonly", @class = "form-control" })
            </dd>

            <dt class="fix-dt-padding">
                @Html.DisplayNameFor(model => model.Grade)
            </dt>

            <dd class="fix-dd-margin">
                @Html.TextBoxFor(model => model.Grade, new { @readonly = "readonly", @class = "form-control" })
            </dd>

            <dt class="fix-dt-padding">
                @Html.DisplayNameFor(model => model.GradeAdditionalNotes)
            </dt>

            <dd class="fix-dd-margin">
                @Html.TextBoxFor(model => model.GradeAdditionalNotes, new { @readonly = "readonly", @class = "form-control" })
            </dd>

            <dt class="fix-dt-padding">
                @Html.DisplayNameFor(model => model.UsedFor)
            </dt>

            <dd>
                @Html.TextBoxFor(model => model.UsedFor, new { @readonly = "readonly", @class = "form-control" })
            </dd>
        </dl>
    </div>
</div>

@Html.Partial("_SectionHeader", "Required Fields to Complete Form")

@using (Html.BeginForm("Topup", "Reagent", null, FormMethod.Post, new { enctype = "multipart/form-data" })) {
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ReagentId)

    <div class="container">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-md-12">
                <div class="col-lg-6">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-addon addon-required" title="Required Field"></div>
                            @Html.EditorFor(model => model.NewLotNumber, new { htmlAttributes = new { @placeholder = "Lot Number", @class = "input-summary form-control required-field-s2", @Value = "" } })
                        </div>
                        @Html.ValidationMessageFor(model => model.NewLotNumber)
                    </div>
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-addon addon-required" title="Required Field"></div>
                            <div class="input-group-addon">
                                <div style="margin-top:-5px;" class="checkbox">
                                    <label>@Html.EditorFor(model => model.IsExpiryDateBasedOnDays) Expire By Days?</label>
                                </div>
                            </div>
                            @Html.EditorFor(model => model.NewExpiryDate, new { htmlAttributes = new { @placeholder = "Click to Select Date", @class = "form-control date-input input-summary required-field-s2", @Value = "", @type = "text" } })
                            @Html.EditorFor(model => model.DaysUntilExpired, new { htmlAttributes = new { @placeholder = "Days Until Expired", @class = "form-control hide-expiry-input input-summary required-field-s2", @Value = "", @type = "hidden" } })
                            <div class="input-group-addon input-group-addon-md">Expiry Date</div>
                        </div>
                        @Html.ValidationMessageFor(model => model.NewExpiryDate)
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-addon addon-required" title="Required Field"></div>
                            <select id="device-selector" data-placeholder="Devices.." name="Devices" class="select2 form-control no-border-radius required-field-s2 input-summary" multiple="multiple">
                                <optgroup label="Balance ID's">
                                    @foreach (var item in Model.BalanceDevices) {
                                        if (@item.IsVerified) {
                                            <option value="@item.DeviceCode">
                                                @item.DeviceCode
                                            </option>
                                        } else {
                                            <option disabled="disabled" value="@item.DeviceCode">
                                                @item.DeviceCode - Not Verified
                                            </option>
                                        }
                                    }
                                </optgroup>
                                <optgroup label="Volumetric ID's">
                                    @foreach (var item in Model.VolumetricDevices) {
                                        if (@item.IsVerified) {
                                            <option value="@item.DeviceCode">
                                                @item.DeviceCode
                                            </option>
                                        } else {
                                            <option disabled="disabled" value="@item.DeviceCode">
                                                @item.DeviceCode - Not Verified
                                            </option>
                                        }
                                    }
                                    <option value="VOL902-W">VOL902-W</option>
                                    <option value="None">No Device Used</option>
                                </optgroup>
                            </select>
                        </div>
                    </div>
                    <div class="input-group">
                        <div class="input-group-addon addon-required" title="Required Field"></div>
                        <input type="file" id="CertificateOfAnalysis" name="uploadCofA" class="form-control btn btn-default" accept=".pdf" />
                        <div class="input-group-addon input-group-addon-md">Upload CofA</div>
                    </div>
                    @Html.ValidationMessageFor(model => model.CertificateOfAnalysis)
                </div>
            </div>
        </div>
    </div>

    @Html.Partial("_SectionHeader", "Update SDS Information")

    <div class="container">
        <div class="form-horizontal">
            <div class="col-md-12">
                <div class="col-lg-6">
                    <div class="input-group">
                        <div class="input-group-addon" title="Required Field"></div>
                        <input type="file" id="MSDS" name="uploadMSDS" class="form-control btn btn-default" accept=".pdf" />
                        <div class="input-group-addon input-group-addon-md">Upload SDS</div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="input-group">
                        <div class="input-group-addon" title="Required Field"></div>
                        @Html.EditorFor(model => model.NewMSDSNotes, new { htmlAttributes = new { @rows = 2, @style = "resize:none;content:''", @placeholder = "SDS Notes", @class = "input-summary form-control no-border-radius", @maxlength = 50 } })
                    </div>
                    @Html.ValidationMessageFor(model => model.NewMSDSNotes)
                </div>
            </div>
            <div class="row" id="button-row">
                <div class="col-md-12 text-center">
                    <input type="button" href='#section-bar-2' value="Cancel" class="btn btn-warning previous-section" />
                    <input name="submit" type="submit" class="btn btn-primary" value="Save" />
                    <input name="submit" type="submit" class="btn btn-primary" value="Save & New" />
                    <div class="btn-group" data-toggle="buttons">
                        <label class="btn btn-default center-block active"><input type="radio">Print Label</label>
                        <label class="btn btn-default center-block"><input type="radio">Don't Print Label</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/datatables")
    <script src="~/Scripts/DatePickerJS/bootstrap-datepicker.min.js"></script>
    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <script>
        $(function () {
            $("#device-selector").chosen({
                max_selected_options: 2,
                placeholder: "Devices.."
            });

            $('#NewExpiryDate').datepicker({
                format: "yyyy-mm-dd",
                startDate: "Today",
                startView: 2,
                todayBtn: "linked",
                clearBtn: true,
                orientation: "bottom auto",
                autoclose: true
            });
        });
    </script>

}