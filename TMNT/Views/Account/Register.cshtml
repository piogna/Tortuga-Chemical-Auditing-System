@model TMNT.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_AdministratorLayout.cshtml";
}

<div class="row">
    <div class="col-lg-12">
        <h1>
            Create New User Account
        </h1>
        <ol class="breadcrumb">
            <li class="active">
                <i class="fa fa-dashboard"></i>@Html.ActionLink(" Dashboard", "Index", "Home") / <i class="fa fa-user"></i> Create New User Account
            </li>
        </ol>
    </div>
</div>

<hr />

<div class="container">
    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" })) {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon no-border-radius"><i class="fa fa-user fa-fw"></i></span>
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @placeholder = "Username" })
            </div>
        </div>
        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon no-border-radius"><i class="fa fa-envelope fa-fw"></i></span>
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email" })
            </div>
        </div>
        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon no-border-radius"><i class="fa fa-user fa-fw"></i></span>
                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", @placeholder = "First Name" })
            </div>
        </div>
        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon no-border-radius"><i class="fa fa-user fa-fw"></i></span>
                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", @placeholder = "Last Name" })
            </div>
        </div>
        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon no-border-radius"><i class="fa fa-map-marker fa-fw"></i></span>
                <select id="LocationName" class="form-control" name="LocationName">
                    <option value="">
                        Choose a Location..
                    </option>
                    @foreach (var item in Model.LocationNames) {
                        <option value="@item">
                            @item
                        </option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon no-border-radius"><i class="fa fa-adjust fa-fw"></i></span>
                <select id="DepartmentName" disabled="disabled" name="DepartmentName" class="form-control no-border-radius required-field input-summary">
                    <option value="">Departments..</option>
                    @foreach (var item in Model.Departments) {
                        <option value="@item.DepartmentName">
                            @item.DepartmentName
                        </option>
                    }
                </select>
            </div>
            @Html.ValidationMessageFor(model => model.DepartmentName)
        </div>
        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon no-border-radius"><i class="fa fa-sitemap fa-fw"></i></span>
                <select id="SubDepartment" disabled="disabled" name="SubDepartment" class="form-control no-border-radius required-field input-summary">
                    <option value="">Sub Departments..</option>
                    <optgroup class="hide opt-organics" label="Organics Sub Departments">
                        @foreach (var item in Model.SubDepartments) {
                            if (item.DepartmentName.Equals("Organics")) {
                                <option value="@item.SubDepartment">
                                    @item.SubDepartment
                                </option>
                            }
                        }
                    </optgroup>
                    <optgroup class="hide opt-inorganics" label="Inorganics Sub Departments">
                        @foreach (var item in Model.SubDepartments) {
                            if (item.DepartmentName.Equals("Inorganics")) {
                                <option value="@item.SubDepartment">
                                    @item.SubDepartment
                                </option>
                            }
                        }
                    </optgroup>
                    <optgroup label="Other">
                        <option value="None">No Sub Department</option>
                    </optgroup>
                </select>
            </div>
        </div>
        <div class="form-group">
            <div class="input-group">
                <span class="input-group-addon no-border-radius"><i class="fa fa-cogs fa-fw"></i></span>
                <select class="form-control" name="Role">
                    <option value="">
                        Choose a Role..
                    </option>
                    @foreach (var item in Model.RoleNames) {
                        <option value="@item">
                            @item
                        </option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="reset" class="btn btn-warning" value="Clear Form" />
                <input name="submit" type="submit" class="btn btn-primary" value="Create" />
                <input name="submit" type="submit" class="btn btn-primary" value="Create & New" />
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(function () {
            var locationNames = $('#LocationName');
            var departmentNames = $('#DepartmentName');
            var subDepartmentNames = $('#SubDepartment');
            var optOrganics = $('.opt-organics');
            var optInorganics = $('.opt-inorganics');

            locationNames.on('change', function () {
                if ($(this).val()) {
                    if (departmentNames.attr("disabled", "disabled")) {
                        departmentNames.removeAttr("disabled");
                    }
                } else {
                    if (!subDepartmentNames.attr("disabled", "disabled")) {
                        subDepartmentNames.attr("disabled", "disabled")
                    }
                    departmentNames.attr("disabled", "disabled");
                }
            });

            departmentNames.on('change', function () {
                var deptValues = $(this).val();

                if ($(this).val()) {
                    //reset
                    subDepartmentNames.val("");
                    switch (deptValues) {
                        case "Organics":
                            optOrganics.removeClass("hide");
                            if (!optInorganics.hasClass('hide')) { optInorganics.addClass('hide'); }
                            break;
                        case "Inorganics":
                            optInorganics.removeClass("hide");
                            if (!optOrganics.hasClass('hide')) { optOrganics.addClass('hide'); }
                            break;
                        default:
                            alert("Something went wrong. Refresh the page and try again. If the problem persists, contact your administrator.");
                            break;
                    }

                    if (subDepartmentNames.attr("disabled", "disabled")) {
                        subDepartmentNames.removeAttr("disabled");
                    } else {
                        subDepartmentNames.attr("disabled", "disabled");
                    }
                } else {
                    if (!subDepartmentNames.attr("disabled", "disabled")) {
                        subDepartmentNames.attr("disabled", "disabled");
                        subDepartmentNames.val("");
                    }
                }
            });
        });
    </script>
}